pipeline {
    agent any

    environment {
        // Define environment variables if needed
        ANDROID_HOME = '/path/to/android/sdk'
        GRADLE_HOME = '/path/to/gradle'
        PROJECT_DIR = 'task3' // Change to your project directory name
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from your Git repository
                git branch: 'main', url: 'https://github.com/Wasswaishaq123/PhoneContactAPP_Task3.git'
            }
        }

        stage('Setup Android SDK') {
            steps {
                script {
                    // Ensure that the Android SDK is set up (download/update SDK if necessary)
                    sh "$ANDROID_HOME/tools/bin/sdkmanager --update"
                    sh "$ANDROID_HOME/tools/bin/sdkmanager 'platforms;android-30' 'build-tools;30.0.3'"
                }
            }
        }

        stage('Build APK') {
            steps {
                // Build the APK using Gradle
                dir(PROJECT_DIR) {
                    sh "./gradlew clean build"
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                // Run unit tests for your project (optional, but recommended)
                dir(PROJECT_DIR) {
                    sh "./gradlew test"
                }
            }
        }

        stage('Build Release APK') {
            steps {
                // Build release APK
                dir(PROJECT_DIR) {
                    sh "./gradlew assembleRelease"
                }
            }
        }

        stage('Deploy') {
            steps {
                // Deploy APK to your deployment platform (e.g., Firebase, Play Store, etc.)
                // Add your deployment logic here (e.g., upload the APK, send notifications, etc.)
                echo 'Deployment stage (implement as per your needs)'
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
